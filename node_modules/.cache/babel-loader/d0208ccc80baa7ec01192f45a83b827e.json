{"ast":null,"code":"var _jsxFileName = \"C:\\\\personal\\\\study\\\\ReactJS\\\\Assignment Projects\\\\PokemonAPP\\\\01-starting-setup (1)\\\\01-starting-setup\\\\src\\\\components\\\\NewExpense\\\\NewExpense.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewExpense = props => {\n  _s();\n\n  const [isEditable, setIsEditable] = useState(false);\n\n  const saveExpenseDataHandler = enteredExpenseData => {\n    const expenseData = { ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    props.onAddExpense(expenseData);\n  };\n\n  const newFormHandler = () => {\n    if (isEditable) {\n      console.log(\"Close the form\");\n      setIsEditable(false);\n    } else {\n      console.log(\"Keep Open form\");\n      setIsEditable(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: [!isEditable && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: newFormHandler,\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 23\n    }, this), isEditable && /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onCancelForm: newFormHandler,\n      onSaveExpenseData: saveExpenseDataHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewExpense, \"XR8qrCeMXdvZ6hXvpL0FK6Kbqdw=\");\n\n_c = NewExpense;\nexport default NewExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"sources":["C:/personal/study/ReactJS/Assignment Projects/PokemonAPP/01-starting-setup (1)/01-starting-setup/src/components/NewExpense/NewExpense.js"],"names":["React","useState","ExpenseForm","NewExpense","props","isEditable","setIsEditable","saveExpenseDataHandler","enteredExpenseData","expenseData","id","Math","random","toString","onAddExpense","newFormHandler","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,kBAAP;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,KAAD,CAA5C;;AACA,QAAMM,sBAAsB,GAAIC,kBAAD,IAAwB;AACrD,UAAMC,WAAW,GAAG,EAClB,GAAGD,kBADe;AAElBE,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd;AAFc,KAApB;AAIAT,IAAAA,KAAK,CAACU,YAAN,CAAmBL,WAAnB;AACD,GAND;;AAQA,QAAMM,cAAc,GAAG,MAAM;AAC3B,QAAIV,UAAJ,EAAgB;AACdW,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAX,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAHD,MAGO;AACLU,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAX,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,eACG,CAACD,UAAD,iBAAe;AAAQ,MAAA,OAAO,EAAEU,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADlB,EAEGV,UAAU,iBACT,QAAC,WAAD;AACE,MAAA,YAAY,EAAEU,cADhB;AAEE,MAAA,iBAAiB,EAAER;AAFrB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA/BD;;GAAMJ,U;;KAAAA,U;AAiCN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditable, setIsEditable] = useState(false);\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n  };\r\n\r\n  const newFormHandler = () => {\r\n    if (isEditable) {\r\n      console.log(\"Close the form\");\r\n      setIsEditable(false);\r\n    } else {\r\n      console.log(\"Keep Open form\");\r\n      setIsEditable(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditable && <button onClick={newFormHandler}>Add New Expense</button>}\r\n      {isEditable && (\r\n        <ExpenseForm\r\n          onCancelForm={newFormHandler}\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n"]},"metadata":{},"sourceType":"module"}